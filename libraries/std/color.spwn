#[no_std, cache_output]

constants = import "constants.spwn"
chroma = import "chroma.spwn"

extract constants.obj_props
extract import "control_flow.spwn"
extract import "util.spwn"
impl @color {

    _range_: #[desc("Implementation of the range operator (`..`) for colors") example("
for color in 1c..10c {
    -> color.set(rgb(0,0,0), 0.5)
}
    ")] create_range_macro(@color),
    set:
    #[desc("Implementation of the color trigger") example("BG.set(rgb(0, 0, 0), 0.5) // turns the background color black")]
    (
        self,
        #[desc("Target chroma")] c: @chroma,
        #[desc("Duration of color change")] duration: @number = 0,
        #[desc("Toggle blending on target color")] blending: @bool = false
    ) -> @NULL {
        $.add( trigger{
            OBJ_ID: 899,
            DURATION: duration,
            TRIGGER_RED: c.r8(),
            TRIGGER_GREEN: c.g8(),
            TRIGGER_BLUE: c.b8(),
            OPACITY: c.a(),
            BLENDING: blending,
            TARGET_COLOR: self,
            36: 1,
        })
        wait(duration)
    }, //1,899,2,285,3,105,36,1,7,255,8,255,9,255,10,0.5,35,0;

    pulse_hsv: #[desc("Implementation of the pulse trigger for colors with hsv") example("BG.pulse_hsv(180, 1, 1, fade_out = 0.5) // pulses the background with the complementary color")]
    (
        self,
        #[desc("Hue")] h: @number,
        #[desc("Saturation")] s: @number,
        #[desc("Brightness")] b: @number,
        #[desc("Saturation checked")] s_checked: @bool = false,
        #[desc("Brightness checked")] b_checked: @bool = false,
        #[desc("Fade-in duration")] fade_in: @number = 0,
        #[desc("Duration to hold the color")] hold: @number = 0,
        #[desc("Fade-out duration")] fade_out: @number = 0,
        #[desc("Whether to prioritize this pulse over simultaneous pulses")] exclusive: @bool = false,
    ) -> @NULL {
        $.add( trigger{
            OBJ_ID: 1006,
            COPIED_COLOR_HVS:
                h as @string + "a" + s as @string + "a" + b as @string + "a"
                    + s_checked as @number as @string + "a" + b_checked as @number as @string,
            EXCLUSIVE: exclusive,
            FADE_IN: fade_in,
            HOLD: hold,
            FADE_OUT: fade_out,
            TARGET: self,
            PULSE_HSV: true,
        })
        wait(fade_in + hold + fade_out)
    },

    pulse: #[desc("Implementation of the pulse trigger for colors") example("BG.pulse(rgb8(255, 0, 0), fade_out = 0.5) // pulses the background red")]
    (
        self,
        #[desc("Chroma for pulse color")] c: @chroma,
        #[desc("Fade-in duration")] fade_in: @number = 0,
        #[desc("Duration to hold the color")] hold: @number = 0,
        #[desc("Fade-out duration")] fade_out: @number = 0,
        #[desc("Whether to prioritize this pulse over simultaneous pulses")] exclusive: @bool = false,
    ) -> @NULL {
        $.add( trigger{
            OBJ_ID: 1006,
            TRIGGER_RED: c.r8(),
            TRIGGER_GREEN: c.g8(),
            TRIGGER_BLUE: c.b8(),
            EXCLUSIVE: exclusive,
            FADE_IN: fade_in,
            HOLD: hold,
            FADE_OUT: fade_out,
            TARGET: self,
            PULSE_HSV: false,
        })
        wait(fade_in + hold + fade_out)
    }
}
